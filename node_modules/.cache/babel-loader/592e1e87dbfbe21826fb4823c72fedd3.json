{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/Users/aryanpitliya/Documents/GitHub/COVID/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/aryanpitliya/Documents/GitHub/COVID/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/aryanpitliya/Documents/GitHub/COVID/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{MenuItem,FormControl,Select,Card,CardContent}from'@material-ui/core';import React,{useEffect,useState}from'react';import InfoBox from'./InfoBox';import Map from\"./Map\";import'./App.css';import Table from'./Table';import{sortData,prettyPrintStat}from\"./util\";import LineGraph from\"./LineGraph\";import\"leaflet/dist/leaflet.css\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState('worldwide'),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];var _useState9=useState({lat:34.80746,lng:-40.4796}),_useState10=_slicedToArray(_useState9,2),mapCenter=_useState10[0],setMapCenter=_useState10[1];var _useState11=useState(3),_useState12=_slicedToArray(_useState11,2),mapZoom=_useState12[0],setMapZoom=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),mapCountries=_useState14[0],setMapCountries=_useState14[1];var _useState15=useState(\"cases\"),_useState16=_slicedToArray(_useState15,2),casesType=_useState16[0],setCasesType=_useState16[1];useEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(Response){return Response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});var sortedData=sortData(data);setTableData(sortedData);setMapCountries(data);setCountries(countries);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=event.target.value;setCountry(countryCode);url=countryCode==='worldwide'?'https://disease.sh/v3/covid-19/all':\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=5;return fetch(url).then(function(response){return response.json();}).then(function(data){setCountry(countryCode);setCountryInfo(data);setMapCenter([data.countryInfo.lat,data.countryInfo.long]);setMapZoom(4);});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app__left\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app__header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"COVID 19 Tracker\"}),/*#__PURE__*/_jsx(FormControl,{className:\"app__dropdown\",children:/*#__PURE__*/_jsxs(Select,{variant:\"outlined\",onChange:onCountryChange,value:country,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"worldwide\",children:\"Worldwide\"}),countries.map(function(country){return/*#__PURE__*/_jsx(MenuItem,{value:country.value,children:country.name});})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"app__stats\",children:[/*#__PURE__*/_jsx(InfoBox,{isRed:true,active:casesType===\"cases\",onClick:function onClick(e){return setCasesType('cases');},title:\"Coronavirus cases\",cases:prettyPrintStat(countryInfo.todayCases),total:prettyPrintStat(countryInfo.cases)}),/*#__PURE__*/_jsx(InfoBox,{active:casesType===\"recovered\",onClick:function onClick(e){return setCasesType('recovered');},title:\"Recovered\",cases:prettyPrintStat(countryInfo.todayRecovered),total:prettyPrintStat(countryInfo.recovered)}),/*#__PURE__*/_jsx(InfoBox,{isRed:true,active:casesType===\"deaths\",onClick:function onClick(e){return setCasesType('deaths');},title:\"Deaths\",cases:prettyPrintStat(countryInfo.todayDeaths),total:prettyPrintStat(countryInfo.deaths)})]}),/*#__PURE__*/_jsx(Map,{casesType:casesType,center:mapCenter,zoom:mapZoom,countries:mapCountries})]}),/*#__PURE__*/_jsx(Card,{className:\"app__right\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Live cases by country\"}),/*#__PURE__*/_jsx(Table,{countries:tableData}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Worldwide new \",casesType]}),/*#__PURE__*/_jsx(LineGraph,{className:\"app__graph\",casesType:casesType})]})})]});}export default App;","map":{"version":3,"sources":["/Users/aryanpitliya/Documents/GitHub/COVID/covid-19-tracker/src/App.js"],"names":["MenuItem","FormControl","Select","Card","CardContent","React","useEffect","useState","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","Response","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","long","e","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import { MenuItem, FormControl, Select, Card, CardContent,} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport InfoBox from './InfoBox';\nimport Map from \"./Map\";\nimport './App.css';\nimport Table from './Table';\nimport { sortData, prettyPrintStat } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({lat: 34.80746, lng: -40.4796});\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\nuseEffect(() => {\n  fetch(\"https://disease.sh/v3/covid-19/all\")\n  .then(response => response.json())\n  .then(data => {\n    setCountryInfo(data);\n  });\n},[]);\n  \n  useEffect(() => {\n    const getCountriesData = async() => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((Response) => Response.json())\n      .then((data) => {\n        const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n        setCountries(countries);\n      });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url = countryCode === 'worldwide' \n    ? 'https://disease.sh/v3/covid-19/all'\n    : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n    .then(response => response.json())\n    .then((data) => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n        <h1>COVID 19 Tracker</h1>\n        <FormControl className=\"app__dropdown\">\n          <Select variant=\"outlined\" onChange={onCountryChange} value={country}>\n            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n            {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox isRed active={casesType === \"cases\"} onClick={e => setCasesType('cases')} title=\"Coronavirus cases\" cases={prettyPrintStat(countryInfo.todayCases)} total={prettyPrintStat(countryInfo.cases)}/>\n          <InfoBox active={casesType === \"recovered\"} onClick={e => setCasesType('recovered')} title=\"Recovered\" cases={prettyPrintStat(countryInfo.todayRecovered)} total={prettyPrintStat(countryInfo.recovered)}/>\n          <InfoBox isRed active={casesType === \"deaths\"} onClick={e => setCasesType('deaths')} title=\"Deaths\" cases={prettyPrintStat(countryInfo.todayDeaths)} total={prettyPrintStat(countryInfo.deaths)}/>\n        </div>\n        <Map\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n          countries={mapCountries}/>\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live cases by country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new {casesType}</h3>\n          <LineGraph className=\"app__graph\" casesType={casesType}/>\n        </CardContent>\n        \n      </Card>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}