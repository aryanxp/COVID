{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aryanpitliya/Documents/GitHub/COVID/covid-19-tracker/src/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltips, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  }\n};\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    let chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => response.json()).then(data => {\n      const chartData = buildChartData(data, 'cases');\n      console.log(chartData);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Im a graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204, 16, 52, 0\",\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/aryanpitliya/Documents/GitHub/COVID/covid-19-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","data","tooltipItem","value","format","LineGraph","setData","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","console","log","datasets","backgroundColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADI;AAIZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL;AADD,GAJE;AASZC,EAAAA,mBAAmB,EAAE,KATT;AAUZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,OADA;AAENC,IAAAA,SAAS,EAAE,KAFL;AAGNC,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAE,UAASJ,QAAT,EAAmBK,IAAnB,EAAwB;AAC3B,eAAOb,OAAO,CAACc,WAAW,CAACC,KAAb,CAAP,CAA2BC,MAA3B,CAAkC,MAAlC,CAAP;AACH;AAHM;AAHL;AAVE,CAAhB;;AAsBA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;;AAEJ,QAAMsB,cAAc,GAAG,CAACN,IAAD,EAAOO,SAAS,GAAG,OAAnB,KAA+B;AAClD,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,aAAJ;;AACA,SAAK,IAAIC,IAAT,IAAiBV,IAAI,CAACW,KAAtB,EAA4B;AACxB,UAAIF,aAAJ,EAAmB;AACf,YAAIG,YAAY,GAAG;AACfC,UAAAA,CAAC,EAAEH,IADY;AAEfI,UAAAA,CAAC,EAAEd,IAAI,CAACO,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFZ,SAAnB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACH;;AACDH,MAAAA,aAAa,GAAGT,IAAI,CAACO,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACH;;AACD,WAAOF,SAAP;AACH,GAdD;;AAgBIvB,EAAAA,SAAS,CAAC,MAAM;AACZ+B,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEOjB,IAAD,IAAU;AACZ,YAAMQ,SAAS,GAAGF,cAAc,CAACN,IAAD,EAAO,OAAP,CAAhC;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAH,MAAAA,OAAO,CAACG,SAAD,CAAP;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AACRc,QAAAA,QAAQ,EAAE,CAAC;AACPC,UAAAA,eAAe,EAAE,qBADV;AAEPvB,UAAAA,IAAI,EAAEA;AAFC,SAAD;AADF;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAvCQI,S;;KAAAA,S;AAyCT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n    legend: {\n        display: false,\n    },\n    elements: {\n        point: {\n            radius: 0,\n        },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n        callbacks: {\n            label: function(tooltips, data){\n                return numeral(tooltipItem.value).format(\"+0,0\");\n            },\n        },\n    },\n}\n\n\nfunction LineGraph() {\n    const [data, setData] = useState({});\n\nconst buildChartData = (data, casesType = \"cases\") => {\n    let chartData = [];\n    let lastDataPoint;\n    for (let date in data.cases){\n        if (lastDataPoint) {\n            let newDataPoint = {\n                x: date,\n                y: data[casesType][date] - lastDataPoint\n            };\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n}\n\n    useEffect(() => {\n        fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n        .then(response => response.json())\n        .then((data) => {\n            const chartData = buildChartData(data, 'cases');\n            console.log(chartData);\n            setData(chartData);\n        });\n    }, []);\n\n    return (\n        <div>\n            <h1>Im a graph</h1>\n            <Line data={{\n                datasets: [{\n                    backgroundColor: \"rgba(204, 16, 52, 0\",\n                    data: data}]\n            }} />\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}