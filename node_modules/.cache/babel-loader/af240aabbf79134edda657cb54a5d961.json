{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aryanpitliya/Documents/GitHub/COVID/covid-19-tracker/src/util.js\";\nimport { Circle, Popup } from 'react-leaflet';\nimport numeral from \"numeral\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    multiplier: 400\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 120\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    multiplier: 200\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n};\nexport const showDataOnMap = (data, casesType = 'cases') => data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  fillOpacity: 0.4,\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  children: /*#__PURE__*/_jsxDEV(Popup, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: `url(${country.countryInfo.flag})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: country.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 9\n}, this));","map":{"version":3,"sources":["/Users/aryanpitliya/Documents/GitHub/COVID/covid-19-tracker/src/util.js"],"names":["Circle","Popup","numeral","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA6B,eAA7B;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,SADA;AAELC,IAAAA,UAAU,EAAE;AAFP,GADa;AAKpBC,EAAAA,SAAS,EAAE;AACTF,IAAAA,GAAG,EAAE,SADI;AAETC,IAAAA,UAAU,EAAE;AAFH,GALS;AASpBE,EAAAA,MAAM,EAAE;AACNH,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,UAAU,EAAE;AAFN;AATY,CAAxB;AAeA,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU;AAC9B,QAAMC,UAAU,GAAG,CAAC,GAAGD,IAAJ,CAAnB;AACA,SAAOC,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACT,KAAF,GAAUU,CAAC,CAACV,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAApD,CAAP;AACH,CAHM;AAKP,OAAO,MAAMW,aAAa,GAAG,CAACL,IAAD,EAAOM,SAAS,GAAC,OAAjB,KACzBN,IAAI,CAACO,GAAL,CAASC,OAAO,iBACZ,QAAC,MAAD;AACI,EAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADZ;AAEI,EAAA,WAAW,EAAE,GAFjB;AAGI,EAAA,KAAK,EAAElB,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAHtC;AAII,EAAA,SAAS,EAAEF,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAJ1C;AAKI,EAAA,MAAM,EACFiB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAAgCb,eAAe,CAACa,SAAD,CAAf,CAA2BV,UANnE;AAAA,yBASI,QAAC,KAAD;AAAA,2BACI;AAAA,8BACI;AACI,QAAA,KAAK,EAAE;AAAEkB,UAAAA,eAAe,EAAG,OAAMN,OAAO,CAACC,WAAR,CAAoBM,IAAK;AAAnD;AADX;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,kBAAMP,OAAO,CAACA;AAAd;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,8BAAahB,OAAO,CAACgB,OAAO,CAACd,KAAT,CAAP,CAAuBsB,MAAvB,CAA8B,KAA9B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,kCAAiBxB,OAAO,CAACgB,OAAO,CAACX,SAAT,CAAP,CAA2BmB,MAA3B,CAAkC,KAAlC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,+BAAcxB,OAAO,CAACgB,OAAO,CAACV,MAAT,CAAP,CAAwBkB,MAAxB,CAA+B,KAA/B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,QADJ,CADG","sourcesContent":["import { Circle, Popup} from 'react-leaflet';\nimport numeral from \"numeral\";\n\nconst casesTypeColors = {\n    cases: {\n      hex: \"#CC1034\",\n      multiplier: 400,\n    },\n    recovered: {\n      hex: \"#7dd71d\",\n      multiplier: 120,\n    },\n    deaths: {\n      hex: \"#fb4443\",\n      multiplier: 200,\n    },\n  };\n\nexport const sortData = (data) => {\n    const sortedData = [...data];\n    return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\n};\n\nexport const showDataOnMap = (data, casesType='cases') => (\n    data.map(country => (\n        <Circle\n            center={[country.countryInfo.lat, country.countryInfo.long]}\n            fillOpacity={0.4}\n            color={casesTypeColors[casesType].hex}\n            fillColor={casesTypeColors[casesType].hex}\n            radius={\n                Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n            }\n        >\n            <Popup>\n                <div>\n                    <div\n                        style={{ backgroundImage: `url(${country.countryInfo.flag})`}}\n                    />\n                    <div>{country.country}</div>\n                    <div>Cases: {numeral(country.cases).format(\"0,0\")}</div>\n                    <div>Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\n                    <div>Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\n                </div>\n            </Popup>\n        </Circle>\n    ))\n)"]},"metadata":{},"sourceType":"module"}