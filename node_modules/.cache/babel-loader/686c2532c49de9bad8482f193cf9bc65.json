{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aryanpitliya/Documents/GitHub/COVID/covid-19-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { MenuItem, FormControl, Select, Card, CardContent } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport InfoBox from './InfoBox';\nimport Map from \"./Map\";\nimport './App.css';\nimport Table from './Table';\nimport { sortData } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(Response => Response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      console.log([data.countryInfo.lat, data.countryInfo.long]);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  }; // console.log(\"COUNTRY INFO >>>>>\", countryInfo)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID 19 Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onCountryChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Coronavirus cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        center: mapCenter,\n        zoom: mapZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live cases by country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide new cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineGraph, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fsww0/+sU8oKtiN0lNqTS5l4Ys8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aryanpitliya/Documents/GitHub/COVID/covid-19-tracker/src/App.js"],"names":["MenuItem","FormControl","Select","Card","CardContent","useEffect","useState","InfoBox","Map","Table","sortData","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","fetch","then","response","json","data","getCountriesData","Response","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","console","log","long","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import { MenuItem, FormControl, Select, Card, CardContent,} from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport InfoBox from './InfoBox';\nimport Map from \"./Map\";\nimport './App.css';\nimport Table from './Table';\nimport { sortData } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({lat: 34.80746, lng: -40.4796});\n  const [mapZoom, setMapZoom] = useState(3);\n\n\nuseEffect(() => {\n  fetch(\"https://disease.sh/v3/covid-19/all\")\n  .then(response => response.json())\n  .then(data => {\n    setCountryInfo(data);\n  });\n},[]);\n  \n  useEffect(() => {\n    const getCountriesData = async() => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((Response) => Response.json())\n      .then((data) => {\n        const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n      });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url = countryCode === 'worldwide' \n    ? 'https://disease.sh/v3/covid-19/all'\n    : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      console.log([data.countryInfo.lat, data.countryInfo.long]);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n\n  // console.log(\"COUNTRY INFO >>>>>\", countryInfo)\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n        <h1>COVID 19 Tracker</h1>\n        <FormControl className=\"app__dropdown\">\n          <Select variant=\"outlined\" onChange={onCountryChange} value={country}>\n            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n            {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox title=\"Coronavirus cases\" cases={countryInfo.todayCases} total={countryInfo.cases}/>\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered}/>\n          <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths}/>\n        </div>\n        <Map\n          center={mapCenter}\n          zoom={mapZoom}/>\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live cases by country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new cases</h3>\n          <LineGraph />\n        </CardContent>\n        \n      </Card>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}